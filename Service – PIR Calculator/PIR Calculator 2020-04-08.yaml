swagger: '2.0'
info: 
  title: PIR Calculator
  version: ""
host: test3.services.ird.govt.nz
basePath: /gateway/calculators/
schemes: 
  - https
paths: 
  /pir: 
    post: 
      tags: 
        - 'Prescribed Investor Rate (PIR) Calculator - Post'
      summary: 'Prescribed Investor Rate (PIR) Calculator - Post'
      description: This API is called to request a “suggested” PIR (Prescribed Investor Rate) value for a customer. The target consumers of this API are the PIE (Portfolio Investment Entity) providers.
      operationId: pirPOST
      consumes: 
        - 'application/json; charset=utf-8'
      produces: 
        - 'application/json; charset=utf-8'
      parameters: 
        - name: body
          in: body
          required: true
          schema: 
            $ref: '#/definitions/pir_POST_Request'
      responses: 
        '200': 
          description: 'HttpStatus: 200 - OK'
          schema: 
            $ref: '#/definitions/pir_POST_Response200'
        '400': 
          description: 'HttpStatus: 400 - BadRequest'
          schema: 
            $ref: '#/definitions/pir_POST_Response400'
        '401': 
          description: 'HttpStatus: 401 - Unauthorized'
          schema: 
            $ref: '#/definitions/pir_POST_Response401'
        '500': 
          description: 'HttpStatus: 500 - InternalServerError'
          schema: 
            $ref: '#/definitions/pir_POST_Response500'
        default: 
          description: ' '
          schema: 
            $ref: '#/definitions/pir_POST_ResponseDefault'
  /status: 
    get: 
      tags: 
        - Web Service Status
      summary: Web Service Status
      description: 'This web service sends a 200 HTTP response with a message body of "OK".'
      operationId: statusGET
      parameters: []
      responses: 
        default: 
          description: ' '
definitions: 
  pir_POST_Request: 
    type: object
    required: 
      - IRD
      - PieIRD
    properties: 
      IRD: 
        type: string
        pattern: '^[0-9]*$'
        description: '<p>The investor''s ird number. This field is validated
to ensure that it exists and is active. The
calculated suggested PIR value will be this
investor’s current PIR. The IRD field will be
the PIE investor or KiwiSaver Scheme
member. Must comply with Modulus 11 check. If IR number is 8 characters, then
pad with leading zero ''0'' to make a
total of 9 characters.
Numeric only, any letters or special
characters will cause the check digit
validation to fail.</p>'
        maxLength: 9
        minLength: 9
      PieIRD: 
        type: string
        pattern: '^[0-9]*$'
        description: '<p>PIE IRD number. This field is validated to
ensure that it exists, is active and is a PIE
entity. The PIE IRD will be either a PIE
financial institution or Kiwisaver Schema
provider. Must comply with Modulus 11 check. If IR number is 8 characters, then
pad with leading zero ''0'' to make a
total of 9 characters</p>'
        maxLength: 9
        minLength: 9
      FormattedName: 
        type: string
        description: '<p>The investor''s formatted name</p>'
        maxLength: 255
      Name: 
        type: object
        required: 
          - FirstName
          - LastName
        properties: 
          FirstName: 
            type: string
            description: '<p>The investor''s first name</p>'
            maxLength: 50
            minLength: 1
          MiddleName: 
            type: string
            description: '<p>The investor''s middle name</p>'
            maxLength: 50
          LastName: 
            type: string
            description: "<p>The investor's last name - Inputs:\r\n<ul>\r\n   <li>Before matching occurs phonetic codes are generated for every name. These codes will be used to search names for a base result.</li>\r\n   <ul>\r\n      <li>A phonetic code represents how a names or like names sound when they are spoken (in English).</li>\r\n      <ul>\r\n         <li>\r\n            For example, Jon and John both sound the same and would therefore generate the same phonetic code: \r\n            <ul>\r\n               <li>John = X12</li>\r\n               <li>Jon = X12</li>\r\n               <li>Eric = X32</li>\r\n            </ul>\r\n         </li>\r\n      </ul>\r\n   </ul>\r\n   <li>Next, the inputs are cleaned to ensure a uniform comparison between inputs to the matching and the data in our system. All accents and uncessary accents are removed.</li>\r\n   <ul>\r\n      <li>Ex.  Ren\xe9e M\xe1ty\xe1\u2019s will result in RENEE MATYAS</li>\r\n   </ul>\r\n   </li>\r\n   <li>Then we standardize commonly used abbreviations</li>\r\n   <ul>\r\n      <li>JOHNSONS W/S becomes JOHNSONS WHOLESALE</li>\r\n      <li>WAREHOUSE LIMITED LIABLITY COMPANY becomes WAREHOUSE LLC</li>\r\n   </ul>\r\n   </li>\r\n   <li>Remove all honorifics</li>\r\n   <ul>\r\n      <li>Mr/Ms/Mrs/Dr, etc.</li>\r\n   </ul>\r\n   </li>\r\n</ul>\r\n</ul>\r\n</ul>\r\n</p>\r\n<p>Results:\r\n<ul>\r\n   <li>If there is only one taxpayer brought back from the first-name last-name combination, then the date-of-birth is not used, and the result is then returned with a 100% match</li>\r\n   <li>If a diminutive of the first-name + last-name results in a single record, then the match percentage = 100%.  Diminutive names are included in the search, for example Steve, Stephen, Steven or Jennifer Jenny, Jennie. Example list of diminutive names: https://github.com/carltonnorthern/nickname-and-diminutive-names-lookup</li>\r\n   <li>If there are multiple results, then we compute similarities and apply a weighted score</li>\r\n   <li>Date-of-birth is not a hard match and is will only be used to score results that have more than one record for the names.</li>\r\n   <ul>\r\n      <li>We use JaroWrinkler to find the similarities between the input and the result set. Ex. If we send in John Smith we may have 3 potential customers is could be:</li>\r\n      <ul>\r\n         <li>John Smith  is 98% similar to Jon Smith</li>\r\n         <li>John Smith  is 97% similar to John Smit</li>\r\n         <li>John Smith  is 95% similar to Jon Smithe \r\n      </ul>\r\n      <li>One we have looked up secondary information (DOB) for each name and scored them we apply a weighting matrix to each secondary piece of information (only if that information was passed in)</li>\r\n      <li>Ex.</li>\r\n      <ul>\r\n         First Name Weight = 0.8</li>\r\n         <li>Middle Name Weight = 0.3</li>\r\n         <li>Last Name Weight = 1</li>\r\n         <li>Date Of Birth Weight = 0.8</li>\r\n      </ul>\r\n      <li>Then we apply each score to each weight for a total score</li>\r\n      <li>Sort by the best combined score and return the result</li>\r\n   </ul>\r\n</ul>\r\n</p>"
            maxLength: 50
            minLength: 1
      Dob: 
        type: string
        description: '<p>The investor''s date of birth. Format: yyyy-MM-dd</p>'
      FormattedAddress: 
        type: string
        description: '<p>The investor''s formatted address</p>'
        maxLength: 255
      Address: 
        type: object
        required: 
          - Street
          - City
          - Country
        properties: 
          Street: 
            type: string
            description: '<p>The investor''s street</p>'
            maxLength: 60
            minLength: 1
          City: 
            type: string
            description: '<p>The investor''s city</p>'
            maxLength: 50
            minLength: 1
          PostCode: 
            type: string
            description: '<p>The investor''s post code</p>'
            maxLength: 10
          State: 
            type: string
            description: '<p>The investor''s state</p>'
            maxLength: 30
          Country: 
            type: string
            description: '<p>The investor''s country</p>'
            maxLength: 2
            minLength: 1
  pir_POST_Response200: 
    type: object
    required: 
      - IRD
      - PieIRD
    properties: 
      IRD: 
        type: string
        description: '<p>The investor''s ird number. This field is validated
to ensure that it exists and is active. The
calculated suggested PIR value will be this
investor’s current PIR. The IRD field will be
the PIE investor or KiwiSaver Scheme
member. Must comply with Modulus 11 check. If IR number is 8 characters, then
pad with leading zero ''0'' to make a
total of 9 characters.
Numeric only, any letters or special
characters will cause the check digit
validation to fail.</p>'
      PieIRD: 
        type: string
        description: '<p>PIE IRD number. This field is validated to
ensure that it exists, is active and is a PIE
entity. The PIE IRD will be either a PIE
financial institution or Kiwisaver Schema
provider. Must comply with Modulus 11 check. If IR number is 8 characters, then
pad with leading zero ''0'' to make a
total of 9 characters</p>'
      SuggestedPirRate: 
        type: number
        description: '<p>The investor''s current PIR rate</p>'
      PirRateNotFound: 
        type: boolean
        description: '<p>The investor''s current PIR rate could not be determined</p>'
  pir_POST_Response400: 
    type: object
    required: 
      - errors
    properties: 
      errors: 
        type: array
        description: Validation array
        items: 
          type: object
          description: Errors Object
          required: 
            - code
            - type
            - message
          properties: 
            code: 
              type: string
              description: 'Error code For validation, Security, Or server type responses.<br><br><table><tbody><tr><th>code</th><th>description</th></tr><tr><td>EV1000</td><td>No incoming POST content found</td></tr><tr><td>EV1100</td><td>Invalid input parameters. Please check documentation</td></tr></tbody></table>'
              maxLength: 6
              enum: 
                - EV1000
                - EV1100
            type: 
              type: string
              description: Type of validation code returned
              enum: 
                - result
                - security
                - server
                - validation
            message: 
              type: string
              description: Error Message
  pir_POST_Response401: 
    type: object
    required: 
      - errors
    properties: 
      errors: 
        type: array
        description: Validation array
        items: 
          type: object
          description: Errors Object
          required: 
            - code
            - type
            - message
          properties: 
            code: 
              type: string
              description: 'Error code For validation, Security, Or server type responses.<br><br><table><tbody><tr><th>code</th><th>description</th></tr><tr><td>EV1023</td><td>No customer associated to TLS cert</td></tr><tr><td>EV1024</td><td>Authentication error</td></tr><tr><td>EV1025</td><td>Missing OAuth or JWT token in the HTTP header</td></tr><tr><td>EV1026</td><td>Authentication error, Issued date or expiry date is invalid</td></tr><tr><td>EV1027</td><td>Certificate or credential could not be found</td></tr><tr><td>EV1028</td><td>Authentication error, JWT signature validation failed</td></tr><tr><td>EV1029</td><td>Authentication error, JWT algorithm not configured on credential doc</td></tr><tr><td>EV1030</td><td>Unknown authentication error</td></tr><tr><td>EV1040</td><td>Start logon associated to OAuth token does not have access to any accounts or customers</td></tr><tr><td>EV1041</td><td>Start logon associated to OAuth token does not have access to member/investor customer</td></tr><tr><td>EV1042</td><td>Unable to validate API consumer to JWT provided</td></tr><tr><td>EV1043</td><td>Unable to validate JWT to member/investor IRD number provided</td></tr><tr><td>IR003</td><td>The IRD supplied has been queried too many times within the past 24 hours.</td></tr></tbody></table>'
              maxLength: 6
              enum: 
                - EV1023
                - EV1024
                - EV1025
                - EV1026
                - EV1027
                - EV1028
                - EV1029
                - EV1030
                - EV1040
                - EV1041
                - EV1042
                - EV1043
                - IR003
            type: 
              type: string
              description: Type of validation code returned
              enum: 
                - result
                - security
                - server
                - validation
            message: 
              type: string
              description: Error Message
  pir_POST_Response500: 
    type: object
    required: 
      - errors
    properties: 
      errors: 
        type: array
        description: Validation array
        items: 
          type: object
          description: Errors Object
          required: 
            - code
            - type
            - message
          properties: 
            code: 
              type: string
              description: 'Error code For validation, Security, Or server type responses.<br><br><table><tbody><tr><th>code</th><th>description</th></tr><tr><td>PIR150</td><td>Unknown error occurred while processing.</td></tr></tbody></table>'
              maxLength: 6
              enum: 
                - PIR150
            type: 
              type: string
              description: Type of validation code returned
              enum: 
                - result
                - security
                - server
                - validation
            message: 
              type: string
              description: Error Message
  pir_POST_ResponseDefault: 
    type: object
    required: 
      - errors
    properties: 
      errors: 
        type: array
        description: Validation array
        items: 
          type: object
          description: Errors Object
          required: 
            - code
            - type
            - message
          properties: 
            code: 
              type: string
              description: 'Error code For validation, Security, Or server type responses.<br><br><table><tbody><tr><th>code</th><th>description</th></tr><tr><td>EV1000</td><td>No incoming POST content found</td></tr><tr><td>EV1100</td><td>Invalid input parameters. Please check documentation</td></tr></tbody></table>'
              maxLength: 6
              enum: 
                - EV1000
                - EV1100
            type: 
              type: string
              description: Type of validation code returned
              enum: 
                - result
                - security
                - server
                - validation
            message: 
              type: string
              description: Error Message